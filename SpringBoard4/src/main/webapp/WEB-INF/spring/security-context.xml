<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Security 인터페이스 빈으로 등록 -->
	<bean id="customAccessDenied" class="com.spring.security.CustomAccessDeniedHandler" />
	<bean id="customLoginSuccess" class="com.spring.security.CustomLoginSuccessHandler" />
	<!-- <bean id="customPasswordEncoder" class="com.spring.security.CustomNoOpPasswordEncoder" /> -->
	<bean id="bcryptPasswordEncoder"
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailsService"
	      class="com.spring.security.CustomUserDetailsService" />
		  
	<!-- URI 경로 접근 -->
	<security:http>
		<!-- <security:intercept-url pattern="/sample/all" access="permitAll" /> -->
		<security:intercept-url pattern="/board/insertBoard" access="isAuthenticated()" />
		<security:intercept-url pattern="/board/boardView" access="isAuthenticated()" />
		<security:intercept-url pattern="/member/memberList" access="hasRole('ROLE_ADMIN')" />
	
		<!-- <security:form-login/> -->
		<!-- <security:form-login login-page="/customLogin" 
		         authentication-success-handler-ref="customLoginSuccess" /> -->
		<security:form-login login-page="/customLogin" />
		<!-- csrf 토큰 비활성화 -->
		<security:csrf disabled="true"/>
		
		<!-- <security:logout logout-url="/customLogout" invalidate-session="true" /> -->
		
		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />
		
		<security:logout logout-url="/customLogout" 
		  invalidate-session="true" delete-cookies="remember-me, JSESSION_ID" />
		<security:access-denied-handler error-page="/accessError" />
		<!-- 에러 처리 빈 참조 -->
		<!-- <security:access-denied-handler ref="customAccessDenied" /> -->
	</security:http>
	
	<!-- 인증 - 권한 -->
	<security:authentication-manager>
		<security:authentication-provider 
			user-service-ref="customUserDetailsService">
			<!-- <security:jdbc-user-service data-source-ref="dataSource"/> -->
			
			<!-- sql query를 이용한 인증 -->
			<!-- <security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select userid, userpw, enabled from
					tbl_member where userid=?"
				authorities-by-username-query="select userid, auth from 
				    tbl_member_auth where userid=?" /> -->
			
			<!-- <security:password-encoder ref="customPasswordEncoder" /> -->
			<!-- 패스워드 암호화 -->
			<security:password-encoder ref="bcryptPasswordEncoder" />
			
			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service> -->
		</security:authentication-provider>
		
	</security:authentication-manager>
	
</beans>
